{"version":3,"sources":["components/navbar/navbar.js","pages/dashboard/dashboard.js","components/alert/alert.js","components/footer/footer.js","pages/login/login.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","role","aria-label","href","alt","src","width","height","aria-expanded","data-target","aria-hidden","this","props","username","id","onClick","localStorage","removeItem","history","push","Component","withRouter","API","timer","Dashboard","useState","todos","settodos","isloading","setisloading","modelopen","setmodelopen","setusername","selectednotecontent","setselectednotecontent","selectednotetitle","setselectednotetitle","selectednoteid","setselectednoteid","selectednotecreated","setselectednotecreated","selectednoteupdated","setselectednoteupdated","useEffect","token","getItem","config","headers","authorization","axios","get","then","result","console","log","data","notes","catch","err","tx","document","getElementsByName","setAttribute","scrollHeight","addEventListener","style","validation","yup","shape","todo","required","useForm","mode","validationSchema","isSubmitting","formState","handleSubmit","register","reset","errors","closeModel","editnote","newtitle","newcontent","pre","map","ele","title","note","handleCheck","content","newdata","clearTimeout","setTimeout","delayedSave","selnoteid","noteindex","e","indexOf","newmodifiiedobj","splice","updated","Date","payload","noteid","post","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","onSubmit","Swal","fire","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","allowOutsideClick","isLoading","value","getalltodos","placeholder","rows","ref","name","type","disabled","max","index","created","moments","fromNow","encrypted","onChange","target","String","split","length","text","icon","confirmButtonColor","cancelButtonColor","state","newestOnTop","rtl","pauseOnFocusLoss","Alert","hidden","Footer","class","Login","altertext","altertshow","alertstyle","changehandleremail","event","setState","email","changehandlerpass","password","btn1handler","preventDefault","body","msg","setItem","response","for","autofocus","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","URL","process","origin","fetch","contentType","status","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2ea84450.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import \"./navbar.scoped.css\";\r\n// import \"./responsive.scoped.css\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar is-dark\"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n            <img\r\n              alt=\"HIDEOUT logo\"\r\n              src=\"https://img.icons8.com/wired/32/5bcd04/note.png\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n            />\r\n            HIDEOUT\r\n          </a>\r\n\r\n          <a\r\n            href=\"# \"\r\n            role=\"button\"\r\n            className=\"navbar-burger burger\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbarBasicExample\"\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n\r\n        {this.props.username ? (\r\n          <div id=\"navbarBasicExample\" className=\"navbar-menu \">\r\n            <div className=\"navbar-end\">\r\n              <div className=\"navbar-item has-dropdown darkmode is-hoverable\">\r\n                <a href=\"# \" className=\"navbar-item  has-text-white\">\r\n                  {this.props.username}\r\n                </a>\r\n                <div className=\"navbar-dropdown darkmode is-right\">\r\n                  <a href=\"# \" className=\"navbar-item darkmode\">\r\n                    Trash\r\n                  </a>\r\n                  <hr className=\"navbar-divider \" />\r\n                  <a\r\n                    href=\"# \"\r\n                    onClick={() => {\r\n                      localStorage.removeItem(\"jwt\");\r\n                      this.props.history.push(\"/\");\r\n                    }}\r\n                    className=\"navbar-item darkmode\"\r\n                  >\r\n                    Logout\r\n                  </a>\r\n                  <div className=\"navbar-item darkmode\">Version 0.8.2</div>\r\n                </div>\r\n              </div>{\" \"}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </nav>\r\n\r\n      /* <nav className=\"navbar navbar-expand-lg fixed-top navbar-light bg-light\">\r\n        <div className=\"container\">\r\n       \r\n          <div className=\"navbar-header\">\r\n            <div>\r\n              <a href=\"/\" className=\"navbar-brand\">\r\n                <img\r\n                  src=\"https://img.icons8.com/nolan/64/000000/share.png\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"navbar-toggler menuicon\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#main-navbar\"\r\n                aria-controls=\"main-navbar\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <img src=\"https://img.icons8.com/material-sharp/24/000000/squared-menu.png\"></img>\r\n        \r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n            <ul className=\"navbar-nav mr-auto w-100 justify-content-left \">\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link\" href=\"/login\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/signup\">\r\n                  Signup\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/guestlogin\">\r\n                  Guest\r\n                </a>\r\n              </li>\r\n         \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav> */\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n\r\n/**\r\n * <header>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n              <a href=\"#\" className=\"navbar-brand\">\r\n                <img\r\n                  className=\"d-inline-block align-top logonamenavbar \"\r\n                  src=\"https://img.icons8.com/nolan/64/000000/share.png\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n            <button\r\n              className=\"navbar-toggler navbar-toggler-right\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#main-navbar\"\r\n              aria-controls=\"main-navbar\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n              <ul className=\"navbar-nav mr-auto mt-2 mt-md-0\">\r\n                <li className=\"nav-item \">\r\n                  <a className=\"nav-link\" href=\"#hero-area\">\r\n                    Home\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#services\">\r\n                    Services\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#feature\">\r\n                    feature\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#contact\">\r\n                    Contact\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n */\r\n\r\n/***\r\n *\r\n */\r\n\r\n/***\r\n *  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          \r\n          <div className=\"navbar-header\">\r\n            <a href=\"index.html\" className=\"navbar-brandlanding\">\r\n              <img\r\n                src=\"https://img.icons8.com/nolan/64/000000/share.png\"\r\n                alt=\"\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#main-navbar\"\r\n            aria-controls=\"main-navbar\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n            <ul className=\"navbar-nav mr-auto mt-2 mt-md-0\">\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link\" href=\"#hero-area\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#services\">\r\n                  Services\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#feature\">\r\n                  feature\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#contact\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n      </nav>\r\n */\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport \"./dashboard.scoped.css\";\r\nimport moments from \"moment/moment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n// import Modal from \"react-responsive-modal\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// const rncrypt = require(\"./rncrpt\");\r\n// const API = \"http://localhost:8080/api\";\r\n\r\nconst API = \"https://gonotesrizky.herokuapp.com/api\";\r\n\r\n// const jwt = require(\"jsonwebtoken\");\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nlet timer = null;\r\nconst Dashboard = (props) => {\r\n  const [todos, settodos] = useState([]);\r\n  // const [username, setusername] = useState(\"\");\r\n  // const [newtodocontent, setnewtodocontent] = useState(\"\");\r\n  // const [id, setid] = useState(\"\");\r\n  const [isloading, setisloading] = useState(true);\r\n  const [modelopen, setmodelopen] = useState(false);\r\n\r\n  const [username, setusername] = useState(\"\");\r\n  const [selectednotecontent, setselectednotecontent] = useState(\"\");\r\n  const [selectednotetitle, setselectednotetitle] = useState(\"\");\r\n  const [selectednoteid, setselectednoteid] = useState(\"\");\r\n  const [selectednotecreated, setselectednotecreated] = useState(\"\");\r\n  const [selectednoteupdated, setselectednoteupdated] = useState(\"\");\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"jwt\");\r\n\r\n    if (!token) {\r\n      props.history.push(\"/\");\r\n    }\r\n\r\n    var config = {\r\n      headers: { authorization: token },\r\n    };\r\n    axios\r\n      .get(`${API}/getall`, config)\r\n      .then((result) => {\r\n        setisloading(false);\r\n        console.log(result.data);\r\n        // setid(result.data.id);\r\n        settodos(result.data.notes);\r\n        setusername(result.data.username);\r\n        // setusername(result.data.name);\r\n      })\r\n      .catch((err) => {\r\n        setisloading(false);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const getalltodos = () => {\r\n    var token = localStorage.getItem(\"jwt\");\r\n\r\n    var config = {\r\n      headers: { authorization: token },\r\n    };\r\n    setisloading(true);\r\n\r\n    axios\r\n      .get(`${API}/getall`, config)\r\n      .then((result) => {\r\n        // var todos = [];\r\n        console.log(result.data);\r\n\r\n        settodos(result.data.notes);\r\n        setusername(result.data.username);\r\n        setisloading(false);\r\n      })\r\n      .catch((err) => {\r\n        setisloading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // var tx =   .getElementById(\"textareanewnote\");\r\n  // var tx = document.querySelector('#textareanewnote')\r\n  var tx = document.getElementsByName(\"todo\");\r\n  // for (var i = 0; i < tx.length; i++) {\r\n  //   tx[i].setAttribute(\r\n  //     \"style\",\r\n  //     \"height:\" + tx[i].scrollHeight + \"px;overflow-y:hidden;\"\r\n  //   );\r\n  //   tx[i].addEventListener(\"input\", OnInput, false);\r\n  // }\r\n\r\n  if (tx[0]) {\r\n    // console.log(tx);\r\n\r\n    tx[0].setAttribute(\r\n      \"style\",\r\n      \"height:\" + tx.scrollHeight + \"px;overflow-y:hidden;\"\r\n    );\r\n\r\n    //   // tx.addEventListener()\r\n\r\n    tx[0].addEventListener(\"input\", OnInput, false);\r\n\r\n    function OnInput() {\r\n      this.style.height = \"auto\";\r\n      this.style.height = this.scrollHeight + \"px\";\r\n    }\r\n  }\r\n\r\n  const validation = yup.object().shape({\r\n    todo: yup.string().required(),\r\n  });\r\n  const {\r\n    formState: { isSubmitting },\r\n    handleSubmit,\r\n    register,\r\n    reset,\r\n    errors,\r\n  } = useForm({ mode: \"onChange\", validationSchema: validation });\r\n\r\n  const addTodo = (data) => {\r\n    console.log(\"adding new todo..........\");\r\n    var token = localStorage.getItem(\"jwt\");\r\n\r\n    Swal.fire({\r\n      title: \"Enter note title\",\r\n      input: \"text\",\r\n      inputAttributes: {\r\n        autocapitalize: \"off\",\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Add\",\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (login) => {},\r\n      allowOutsideClick: () => !Swal.isLoading(),\r\n    }).then((result) => {\r\n      console.log(result);\r\n      console.log(data);\r\n\r\n      var payload = {\r\n        title: result.value,\r\n        note: data.todo,\r\n      };\r\n\r\n      var config = {\r\n        headers: { authorization: token },\r\n      };\r\n      setisloading(true);\r\n      console.log(data);\r\n      axios\r\n        .post(`${API}/add`, payload, config)\r\n        .then((result) => {\r\n          console.log(result.data);\r\n\r\n          getalltodos();\r\n          setisloading(false);\r\n          reset();\r\n\r\n          toast.success(\"Note added successfully\", {\r\n            position: \"bottom-left\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: false,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setisloading(false);\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  const openModel = (noteid, title, content, created, updated) => {\r\n    setmodelopen(true);\r\n    setselectednotetitle(title);\r\n    setselectednotecontent(content);\r\n    setselectednoteid(noteid);\r\n    setselectednotecreated(created);\r\n    setselectednoteupdated(updated);\r\n    // console.log(\"opne model\");\r\n  };\r\n  const closeModel = () => {\r\n    setmodelopen(false);\r\n    setselectednotetitle(\"\");\r\n    setselectednotecontent(\"\");\r\n    setselectednotecreated(\"\");\r\n    setselectednoteupdated(\"\");\r\n    setselectednoteid(\"\");\r\n  };\r\n\r\n  const editnote = (newtitle, newcontent) => {\r\n    console.log(newtitle, newcontent);\r\n    setselectednotetitle(newtitle);\r\n    setselectednotecontent(newcontent);\r\n\r\n    console.log(todos[0]);\r\n\r\n    settodos((pre) => {\r\n      return pre.map((ele) => {\r\n        if (ele.id === selectednoteid) {\r\n          ele.title = newtitle;\r\n          ele.note = newcontent;\r\n          console.log(\"foundddddddd\");\r\n          return ele;\r\n        } else {\r\n          return ele;\r\n        }\r\n      });\r\n      // return pre.map(ele=>{if(ele._id===selectednoteid){ ele.title=newtitle ele.content=newcontent }:ele})\r\n    });\r\n\r\n    handleCheck(selectednoteid, { title: newtitle, content: newcontent });\r\n  };\r\n\r\n  const handleCheck = (id, newdata) => {\r\n    // Clears running timer and starts a new one each time the user types\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      // this.toggleCheck();\r\n      delayedSave(id, newdata);\r\n      console.log(\"fire fire fire\");\r\n    }, 1000);\r\n  };\r\n\r\n  const delayedSave = (id, newdata) => {\r\n    var selnoteid = selectednoteid;\r\n\r\n    settodos((pre) => {\r\n      var noteindex = pre\r\n        .map(function (e) {\r\n          return e.id;\r\n        })\r\n        .indexOf(selnoteid);\r\n      console.log(noteindex);\r\n      var newmodifiiedobj = pre.splice(noteindex, 1);\r\n      newmodifiiedobj[0].updated = new Date();\r\n\r\n      return [...newmodifiiedobj, ...pre];\r\n    });\r\n\r\n    var token = localStorage.getItem(\"jwt\");\r\n\r\n    var config = {\r\n      headers: { authorization: token },\r\n    };\r\n    setisloading(true);\r\n\r\n    var payload = {\r\n      noteid: id,\r\n      note: newdata.content,\r\n      title: newdata.title,\r\n    };\r\n\r\n    console.log(payload);\r\n\r\n    axios\r\n      .post(`${API}/update`, payload, config)\r\n      .then((result) => {\r\n        // var todos = [];\r\n        console.log(result.data);\r\n\r\n        toast.success(\"Note edited successfully\", {\r\n          position: \"bottom-left\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: false,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setisloading(false);\r\n      })\r\n      .catch((err) => {\r\n        setisloading(false);\r\n        console.log(err);\r\n        toast.error(\"Error\", {\r\n          position: \"bottom-left\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: false,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n  };\r\n\r\n  const deactivatenoe = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Note will be moved to trash !\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, do it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        var token = localStorage.getItem(\"jwt\");\r\n\r\n        var config = {\r\n          headers: { authorization: token },\r\n        };\r\n        setisloading(true);\r\n\r\n        var payload = {\r\n          noteid: selectednoteid,\r\n          state: false,\r\n        };\r\n\r\n        console.log(payload);\r\n\r\n        axios\r\n          .post(\"/api/changestate\", payload, config)\r\n          .then((result) => {\r\n            console.log(result.data);\r\n            setisloading(false);\r\n            closeModel();\r\n\r\n            settodos((pre) => {\r\n              var noteindex = pre\r\n                .map(function (e) {\r\n                  return e.id;\r\n                })\r\n                .indexOf(selectednoteid);\r\n              console.log(noteindex);\r\n              pre.splice(noteindex, 1);\r\n\r\n              return [...pre];\r\n            });\r\n\r\n            Swal.fire(\"Deleted!\", \"Your note is moved to trash.\", \"success\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"darkmode \">\r\n      <Navbar username={username} />\r\n      <div className=\"container \">\r\n        <div className=\"container\">\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-half newnotediv\">\r\n              {\" \"}\r\n              <form onSubmit={handleSubmit(addTodo)}>\r\n                <textarea\r\n                  id=\"textareanewnote\"\r\n                  className={\r\n                    errors.todo\r\n                      ? \"textarea inputbordercolor newnotediv darkmode is-danger\"\r\n                      : \"textarea inputbordercolor newnotediv darkmode\"\r\n                  }\r\n                  placeholder=\"What's on your mind\"\r\n                  rows=\"1\"\r\n                  ref={register}\r\n                  // value={newtodocontent}\r\n                  // onChange={(e) => {\r\n                  //   setnewtodocontent(e.target.value);\r\n                  // }}\r\n                  name=\"todo\"\r\n                ></textarea>\r\n                {/* {errors.todo && <p> type something dude </p>} */}\r\n                <div className=\"has-text-right\">\r\n                  <button\r\n                    className=\"button is-info addnotebtn  is-small\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || errors.todo}\r\n                    // onClick={console.log('sas ')}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isloading && (\r\n          <progress className=\"progress is-success loadingbar \" max=\"100\">\r\n            Loading...\r\n          </progress>\r\n        )}\r\n\r\n        <div className=\"\">\r\n          {todos.map((ele, index) => {\r\n            return (\r\n              <div className=\"tile is-ancestor  \">\r\n                {/* <div className=\"tile is-vertical is-8 is-centered\"> */}\r\n                <div className=\"tile\">\r\n                  <div className=\"tile is-parent is-vertical notetileouter  \">\r\n                    <article\r\n                      onClick={() =>\r\n                        openModel(\r\n                          ele.id,\r\n                          ele.title,\r\n                          ele.note,\r\n                          ele.created,\r\n                          ele.updated\r\n                        )\r\n                      }\r\n                      className=\"tile is-child notification is-primary notetile\"\r\n                    >\r\n                      <p className=\" is-pulled-right\">\r\n                        Created : {moments(ele.created).fromNow()}\r\n                      </p>\r\n                      <br></br>\r\n                      <p className=\"is-pulled-right \">\r\n                        Updated : {moments(ele.updated).fromNow()}\r\n                      </p>\r\n\r\n                      <p className=\"title \">\r\n                        {ele.encrypted ? \"encrypted\" : ele.title}\r\n                      </p>\r\n                      <p className=\"subtitle contentnote\">\r\n                        {ele.encrypted ? \"encrypted\" : ele.note}\r\n                      </p>\r\n                    </article>\r\n                  </div>\r\n                </div>{\" \"}\r\n                {/* <textarea\r\n                  // placeholder=\"What's next Lord Rizky \"\r\n                  class=\"form-control\"\r\n                  id=\"textareaaddtodo\"\r\n                  rows=\"3\"\r\n                  wrap=\"off\"\r\n                  // ref={register}\r\n                  // name=\"todo\"\r\n                  onChange={(e) => {\r\n                    onedit(index, e.target.value, ele._id);\r\n                  }}\r\n                  value={ele.encrypted ? \"encrypted\" : ele.content}\r\n                ></textarea> */}\r\n                {/* {errors.todo && <p> type something dude </p>} */}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className={modelopen ? \"modal  is-active\" : \"modal \"}>\r\n          <div className=\"modal-background\" onClick={() => closeModel()}></div>\r\n\r\n          <div className=\"modal-card \">\r\n            <header className=\"modal-card-head editnoteheader darkmode\">\r\n              <p className=\"modal-card-title\">\r\n                <input\r\n                  className=\"input inputbordercolor notetitlechangeinput darkmode\"\r\n                  type=\"text\"\r\n                  value={selectednotetitle}\r\n                  placeholder=\"Title\"\r\n                  onChange={(e) =>\r\n                    editnote(e.target.value, selectednotecontent)\r\n                  }\r\n                ></input>\r\n              </p>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={() => closeModel()}\r\n                aria-label=\"close\"\r\n              ></button>\r\n            </header>{\" \"}\r\n            <section className=\"modal-card-body darkmode contentnote\">\r\n              <textarea\r\n                className=\"textarea darkmode inputbordercolor inputbordercolor\"\r\n                value={selectednotecontent}\r\n                onChange={(e) => editnote(selectednotetitle, e.target.value)}\r\n                rows={String(selectednotecontent.split(\"\\n\").length + 10)}\r\n                placeholder=\"lets write something lord\"\r\n              ></textarea>\r\n            </section>\r\n            <footer className=\"modal-card-foot darkmode editnotefooter cardnotefooter\">\r\n              <div>\r\n                <p className=\" timeinmodal \">\r\n                  Created : {moments(selectednotecreated).fromNow()}\r\n                </p>\r\n                <p className=\"timeinmodal  \">\r\n                  Updated : {moments(selectednoteupdated).fromNow()}\r\n                </p>{\" \"}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => deactivatenoe()}\r\n                className=\"deletenotebutton button is-small is-danger \"\r\n              >\r\n                Delete\r\n              </button>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n\r\n        {todos.length === 0 ? \"No Todos to show , Start with new one eh\" : \"\"}\r\n        {/* </div> */}\r\n        {/* </div> */}\r\n        <ToastContainer\r\n          position=\"bottom-left\"\r\n          autoClose={2000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick={false}\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          // bodyStyle={{ backgroundColor: \"#5bcd04\" , colo}}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    <div hidden={props.hidden} className={`notification is-mobile has-text-centered is-${props.style}`}>\r\n      {props.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\n// import { Redirect, Link } from \"react-router-dom\";\r\n// import Navbar from \"../../components/navbar\";\r\n\r\n// import Navbar from \"../../components/navbar/navbar\";\r\n// import \"./footer.scoped.css\";\r\n// const jsonwebtoken = require(\"jsonwebtoken\");\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer class=\"footer\">\r\n        <div class=\"content has-text-centered\">\r\n          <p>\r\n            <strong>Bulma</strong> by{\" \"}\r\n            <a href=\"https://jgthms.com\">Jeremy Thomas</a>. The source code is\r\n            licensed\r\n            <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>.\r\n            The website content is licensed{\" \"}\r\n            <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\r\n              CC BY NC SA 4.0\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n// import { Redirect, Link } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Alert from \"../../components/alert/alert\";\r\nimport \"./login.scoped.css\";\r\nimport axios from \"axios\";\r\n\r\nimport Footer from \"../../components/footer/footer\";\r\n\r\n// const API = \"http://localhost:8080\";\r\n\r\nconst API = \"https://gonotesrizky.herokuapp.com\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    token: \"\",\r\n    // email: \"\",\r\n    // password: \"\",\r\n    altertext: \"\",\r\n    altertshow: true,\r\n    alertstyle: \"\",\r\n  };\r\n\r\n  changehandleremail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  changehandlerpass = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n\r\n  btn1handler = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      altertext: \"\",\r\n      altertshow: true,\r\n      alertstyle: \"danger\",\r\n    });\r\n    console.log(\"cliking\");\r\n\r\n    console.log(\"sending..............\");\r\n    console.log(this.state.email + this.state.password);\r\n\r\n    axios\r\n      .post(`${API}/login`, {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n      .then((data) => {\r\n        console.log(\"awe mewwa - - -popopopopo\");\r\n        console.log(data);\r\n        var body = data.data;\r\n\r\n        if (body.msg === \"success\") {\r\n          console.log(\"body - \" + body);\r\n          localStorage.setItem(\"jwt\", body.token);\r\n\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //   M.toast({ html: \"Invalid Credentials\" });\r\n        console.log(err.response.data.msg);\r\n\r\n        if (err.response.data.msg === \"Invalid_email\") {\r\n          this.setState({\r\n            altertext: \"Your are not in registerd aye!\",\r\n            altertshow: false,\r\n            alertstyle: \"danger\",\r\n          });\r\n        }\r\n        if (err.response.data.msg === \"Invalid_password\") {\r\n          this.setState({\r\n            altertext: \"Are you sure these are your creds ? \",\r\n            altertshow: false,\r\n            alertstyle: \"danger\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" is-desktop is-vcentered\">\r\n        <section className=\"hero  is-fullheight\">\r\n          <Navbar />\r\n          <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n              <Alert\r\n                style={this.state.alertstyle}\r\n                text={this.state.altertext}\r\n                hidden={this.state.altertshow}\r\n              />\r\n              <div className=\"columns is-centered\">\r\n                <div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                  <form onSubmit={this.btn1handler} className=\"box\">\r\n                    <div className=\"field\">\r\n                      <label for=\"\" className=\"label\">\r\n                        Email\r\n                      </label>\r\n                      <div className=\"control has-icons-right\">\r\n                        <input\r\n                          id=\"email\"\r\n                          required\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          placeholder=\"Enter your email\"\r\n                          autofocus\r\n                          onChange={this.changehandleremail}\r\n                          className=\"input\"\r\n                        />\r\n                        <span className=\"icon is-small is-right\">\r\n                          <i className=\"fa fa-envelope\"></i>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                      <label for=\"\" className=\"label\">\r\n                        Password\r\n                      </label>\r\n                      <div className=\"control has-icons-right\">\r\n                        <input\r\n                          className=\"input\"\r\n                          required\r\n                          id=\"pass\"\r\n                          type=\"password\"\r\n                          name=\"pass\"\r\n                          placeholder=\"Enter your password\"\r\n                          onChange={this.changehandlerpass}\r\n                        />\r\n                        <span className=\"icon is-small is-right\">\r\n                          <i className=\"fa fa-lock\"></i>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                      <button type=\"submit\" className=\"button is-success\">\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n          <Footer />\r\n        </section>\r\n      </div>\r\n\r\n      // <div className=\" \">\r\n      //   <Navbar />\r\n      //   <div className=\"text-center\">\r\n      //     <div className=\"container\">\r\n      //       <form className=\"form-signin\" onSubmit={this.btn1handler}>\r\n      //         <img\r\n      //           className=\"mb-4\"\r\n      //           src=\"https://img.icons8.com/nolan/64/000000/share.png\"\r\n      //           alt=\"\"\r\n      //           width={72}\r\n      //           height={72}\r\n      //         />\r\n      //         <h1 className=\"h3 mb-3 font-weight-normal\">Login to continue</h1>\r\n\r\n      //         <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n      //           Password\r\n      //         </label>\r\n      //         <input\r\n\r\n      //         />\r\n      //         <div className=\" text-left mb-3\">\r\n      //           <a href=\"/forgotpassword\">forgot password</a>\r\n      //         </div>\r\n      //         <button\r\n      //           className=\"btn btn-lg btn-primary btn-block\"\r\n      //           type=\"submit\"\r\n      //         >\r\n      //           Login\r\n      //         </button>\r\n      //         {/* <p className=\"mt-5 mb-3 text-muted \">© 2017-2019</p> */}\r\n      //       </form>\r\n      //       {this.state.creaderror && (\r\n      //         <div className=\"container\">\r\n      //           <div className=\"credeer\">Invalid Creadentials</div>\r\n      //         </div>\r\n      //       )}\r\n      //     </div>\r\n      //   </div>\r\n      //   <Footer />\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route,  Switch } from \"react-router-dom\";\r\n// import Signup from \"./pages/signup/signup\";\r\nimport Dashboard from \"./pages/dashboard/dashboard\";\r\n// import Forgotpassword from \"./pages/forgotpassword/forgotpassword\";\r\n// import Resetpassword from \"./pages/resetpassword/resetpassword\";\r\n// import Privacypolicy from \"./pages/privacy/privacy\";\r\nimport Login from \"./pages/login/login\";\r\nimport \"./App.css\";\r\n\r\nimport \"bulma/css/bulma.css\";\r\n\r\n// import \"bulma/sass/utilities/_all.sass\";\r\n// import \"bulma/sass/base/_all.sass\";\r\n// import \"bulma/sass/elements/button.sass\";\r\n// import \"bulma/sass/elements/container.sass\";\r\n// import \"bulma/sass/elements/form.sass\";\r\n// import \"bulma/sass/elements/title.sass\";\r\n// import \"bulma/sass/components/navbar.sass\";\r\n// import \"bulma/sass/layout/hero.sass\";\r\n// import \"bulma/sass/layout/section.sass\";\r\n// import Landingpage from \"./pages/landingpage/landingpage/landingpage\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          {/* <Route path=\"/forgotpassword\" component={Forgotpassword} /> */}\r\n          {/* <Route path=\"/signup\" component={Signup} /> */}\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          {/* <Route path=\"/privacypolicy\" component={Privacypolicy} /> */}\r\n          {/* <Route path=\"/resetpassword/:id\" component={Resetpassword} /> */}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport { register } from \"./serviceWorker\";\r\n\r\n// registerServiceWorker\r\n// unregister();\r\n// serviceworker()\r\n// registerServiceWorker();\r\n\r\nregister();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}